
package client;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.sql.Statement;

import java.text.ParseException;

import java.text.SimpleDateFormat;

import java.util.Date;

import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Galutvo
 */
public class DialogJrnAdd extends JDialog {

    /** Creates new form DialogJrnAdd */
    public DialogJrnAdd(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(parent);
        InitEditObjects();
        try {
            FillJrnCombo();
        } catch (SQLException e) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Создать журнал в справочнике журналов");

        jButton1.setText("Закрыть");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.##.####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.##.####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Тип журнала");

        jLabel2.setText("Номер (или название)");

        jLabel3.setText("Действует с ДД.ММ.ГГГГ");

        jLabel4.setText("Действует по ДД.ММ.ГГГГ");

        jButton2.setText("Создать");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Тип журнала");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                            .addComponent(jFormattedTextField1)
                            .addComponent(jTextField1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    setVisible(false);
    dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

/*комбобокс реакция*/
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
    if (jComboBox1.getItemCount()>0){
        jComboBox1.setToolTipText(jComboBox1.getSelectedItem().toString());
        jLabel5.setText(jComboBox1.getSelectedItem().toString());
    }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed


/*СОЗДАТЬ ЖУРНАЛ В БД*/
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    int dialogResult = JOptionPane.showConfirmDialog (null, "Подтвердите содание журнала?","Внимание!",JOptionPane.YES_NO_OPTION);
    if(dialogResult == JOptionPane.YES_OPTION){
         this.InsertData();         
        this.dispose();
    }    
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogJrnAdd.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogJrnAdd.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogJrnAdd.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogJrnAdd.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogJrnAdd dialog = new DialogJrnAdd(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    /*Заполняем Комбобокс тип журнала*/
    public void FillJrnCombo() throws SQLException {        
        String query="select nvl(cjtype,'НЕТ ИНФОРМАЦИИ') v01 from xxi.keyarch_jrntype order by cjtype";
        Connection con = FrameLogon.mainpool.OpenConnection();
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery(query);
        
        jComboBox1.removeAllItems(); //чистим бокс
        //jComboBox1.addItem("Взять из базы...");
        
        while (rs.next()) 
          {
             jComboBox1.addItem(rs.getString("v01"));
          }
        
        st.close();
        con.close(); 
        con = null;
        FrameLogon.mainpool.Close();     
    }

    public void InitEditObjects(){
        this.jFormattedTextField1.setText(this.Get_CurrentDate());            
        this.jFormattedTextField2.setText(this.Get_NextCurrentDate()); 
    }
    
    public String Get_CurrentDate(){
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");  //"yyyy-MM-dd HH:mm:ss");
        Date date = new Date(System.currentTimeMillis());        
        String curdate = sdf.format(date);                        
        return curdate;
    }

    public String Get_NextCurrentDate(){
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");  //"yyyy-MM-dd HH:mm:ss");
        Date date = new Date(System.currentTimeMillis());                
        String curdate = sdf.format(date);
        
        curdate = "31.12."+Integer.toString(Integer.parseInt(curdate.substring(6, 10))/*+1*/);;        
        return curdate;
    }
    
    
    /*Контроль заполнения всех сведений формы*/
    private boolean  CheckFormFill() {
        boolean check=true;
        
        //проверяем все TextFields на форме        
        if (jComboBox1.getSelectedIndex()<0) {check=false;}
        if (jTextField1.getText().length()<1) {check=false;}
        if (jFormattedTextField1.getText().length()<1) {check=false;}
        if (jFormattedTextField2.getText().length()<1) {check=false;}
        if (!isThisDateValid(jFormattedTextField1.getText(),"dd.MM.yyyy")) {check=false;}
        if (!isThisDateValid(jFormattedTextField2.getText(),"dd.MM.yyyy")) {check=false;}
        
        return check;
    }
    
    /*Проверка даты на валидность формату*/
    
    public boolean isThisDateValid(String dateToValidate, String dateFromat){
     
                    if(dateToValidate == null){
                            return false;
                    }
     
                    SimpleDateFormat sdf = new SimpleDateFormat(dateFromat);
                    sdf.setLenient(false);
     
                    try {
     
                            //if not valid, it will throw ParseException
                            Date date = sdf.parse(dateToValidate);
                            //System.out.println(date);
     
                    } catch (ParseException e) {
     
                            e.printStackTrace();
                            return false;
                    }
     
                    return true;
            }
    private int InsertData(){        
     
        if (!CheckFormFill()){
            JOptionPane.showMessageDialog(this, "Должны быть заполнены все данные формы.", "Ошибка!", JOptionPane.WARNING_MESSAGE);
            return 1;            
        }       
        
        String iid = ""; //будет задан в функции инсерта
        String cjnum=this.jTextField1.getText();
        String ddate_start=this.jFormattedTextField1.getText();
        String ddate_end=this.jFormattedTextField2.getText();
        String ijtype_id=Integer.toString(this.jComboBox1.getSelectedIndex()+1);

        try {
            InsertDB(iid, cjnum, ddate_start, ddate_end, ijtype_id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        return 0;
    }

    /*Функция для инсерта SQL в базу*/
        public int InsertDB(        
            String iid,String  cjnum, String ddate_start, String ddate_end,String  ijtype_id) throws Exception {

                
                iid = "(select nvl(max(iid),0)+1 v01 from xxi.keyarch_jrn)";                
                String insert_sql="INSERT INTO xxi.keyarch_jrn VALUES("+
                                  iid+","+
                                  "'"+cjnum+"'"+
                                  ",TO_DATE('"+ddate_start+"', 'DD.MM.RRRR')"+
                                  ",TO_DATE('"+ddate_end+"', 'DD.MM.RRRR')"+
                                  ","+ijtype_id+")";
                                                  
                Connection con = FrameLogon.mainpool.OpenConnection(); //DriverManager.getConnection(Frame1.get_dbconndata(1), Frame1.get_dbconndata(2), Frame1.get_dbconndata(3));
                Statement st = con.createStatement();               
                //System.out.println("SQL-SZ:"+insert_sql);
                st.executeUpdate(insert_sql);            
                //con.commit();
                st.close();
                con.close(); 
                con = null;
                FrameLogon.mainpool.Close();
                return 0;
            }

}
