
package client;

import java.awt.Frame;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.sql.Statement;

import java.text.ParseException;
import java.text.SimpleDateFormat;

import java.util.Date;

import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Galutvo
 */
public class DialogSZGive extends javax.swing.JDialog {
    private boolean showdeleted=false;
    public static int icusnum=-1;    
    private int recnum=-1;
    
    /** Creates new form DialogSZGive */
    public DialogSZGive(DialogSZ parent,String title, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Выдать клиенту средства защиты");
        MaskFormatter datemask1 = new MaskFormatter();
        try {
            datemask1 = new MaskFormatter("##.##.####");
        } catch (ParseException e) {
        }

        datemask1.install(jFormattedTextField1);
        jFormattedTextField1.setText(this.Get_CurrentDate());
        //jTextField13.setText("СКЗИ \"MS_KEY K\" Исп.5.1.1");
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
               
        String[] skziList=new String[0];
        try {
            skziList = this.GetUsableSKZI();
        } catch (SQLException e) {
        }        
        
        for (int i=0;i<skziList.length;i++){
            jComboBox1.addItem(skziList[i]);
        }

        jComboBox2.addItem("VASCO Digipass Go3");
        /////jComboBox1.addItem("СКЗИ \"MS_KEY K\" - \"АНГАРА\" Исп.8.1.1");
        /////jComboBox1.addItem("СКЗИ Рутокен ЭЦП 2.0");
        //jComboBox1.addItem("СКЗИ \"MS_KEY K\" Исп.5.1.1");
        //jComboBox1.addItem("USB-токен \"iBank 2 Key\" (СКЗИ ФОРОС. Исполнение №1)");
        //jComboBox1.addItem("USB-токен \"iBank 2 Key\" (СКЗИ ФОРОС. Исполнение №2 / Криптомодуль C23)");
        /////jComboBox1.addItem("Крипто-Ком 3.3");
        //jComboBox1.addItem("USB-токен \"iBank 2 Key\" (СКЗИ \"Криптомодуль C23\")");  
                
        jComboBox1.setSelectedIndex(0);        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPanel2 = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(153, 204, 255));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Выдача"));

        jTextField11.setEditable(false);
        jTextField11.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel12.setText("Клиент:");

        jButton3.setText("Выбрать клиента");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel13.setText("ДАТА ВЫДАЧИ:");

        jButton2.setText("Выдать");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jFormattedTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedTextField1.setText("27.01.1983");

        jLabel17.setText("КОММЕНТАРИЙ:");

        jLabel18.setForeground(new java.awt.Color(51, 51, 255));
        jLabel18.setText("ВЫБЕРИТЕ КЛИЕНТА");

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("USB-токен (НЭК)"));
        jPanel1.setName(""); // NOI18N

        jLabel14.setText("ТИП НЭК:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0" }));

        jLabel15.setText("НЭК S/N");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("OTP-токен / SMS-токен"));

        jLabel19.setText("ТИП OTP:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0" }));

        jLabel16.setText("OTP S/N");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //String short_name=jTable1_cli.getValueAt(jTable1_cli.getSelectedRow(), 2).toString();
        //String full_name=jTable1_cli.getValueAt(jTable1_cli.getSelectedRow(), 1).toString();
        //int client_number=Integer.parseInt(this.jTextField3.getText());
        DialogSZSelect dialogszselect = new DialogSZSelect (this,"",true);
        dialogszselect.setLocationRelativeTo(this);
        dialogszselect.setVisible(true);
         if(icusnum<0){
                this.jTextField11.setText("");
         }else{
                this.jTextField11.setText(Integer.toString(icusnum));
                try {
                    this.jLabel18.setText(GetNameByNum(icusnum, false));
                } catch (SQLException e) {
            }        
        }

        //dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            if (IdAlreadyExist(jTextField14.getText(),1)) {
                JOptionPane.showMessageDialog(this, "Носитель уже существует в системе!" + jTextField14.getText() + " !",
                    "Ошибка!", JOptionPane.ERROR_MESSAGE);
            }else if (IdAlreadyExist(jTextField15.getText(),2)) {
                JOptionPane.showMessageDialog(this, "Средство подтверждения уже существует в системе!" + jTextField15.getText() + " !",
                    "Ошибка!", JOptionPane.ERROR_MESSAGE);
            }else{
                int dialogResult2 = JOptionPane.showConfirmDialog (null, "Добавить данные?\n"+
                                                                         "USB-токен: "+jTextField14.getText()+"\n"+
                                                                         "OTP-токен: "+jTextField15.getText()+"\n"+                                                                         
                                                                         "Незаполненные поля будут иметь значение \"NULL\"","Внимание!",JOptionPane.YES_NO_OPTION);
                if(dialogResult2 == JOptionPane.YES_OPTION){
                        InsertData();
                        this.dispose();
                }                   
            }
        } catch (SQLException f) {

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogSZGive.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogSZGive.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogSZGive.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogSZGive.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogSZGive dialog = new DialogSZGive(new Jialog(),"", true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    // End of variables declaration//GEN-END:variables

    private String GetNameByNum(int num, boolean full) throws SQLException
    {
        String query="select ccusname_sh v01 from xxi.cus where icusnum="+Integer.toString(num);    
        if (full){
            query="select ccusname v01 from xxi.cus where icusnum="+Integer.toString(num);    
        }
                                
        Connection con = FrameLogon.mainpool.OpenConnection(); //DriverManager.getConnection(Frame1.get_dbconndata(1), Frame1.get_dbconndata(2), Frame1.get_dbconndata(3));
        Statement st = con.createStatement();

        ResultSet rs = st.executeQuery(query); 

        String resstr="";
        
        while (rs.next()) 
        {
            resstr = rs.getString("v01");
        }        

        st.close();
        con.close(); 
        con = null;
        FrameLogon.mainpool.Close();
        return resstr;
    }  

    private String[] GetUsableSKZI() throws SQLException
    {
        String query="SELECT CSKZINAME v01 FROM XXI.KEYARCH_SKZI_TYPE WHERE RECSTATE=1";
                                
        Connection con = FrameLogon.mainpool.OpenConnection(); //DriverManager.getConnection(Frame1.get_dbconndata(1), Frame1.get_dbconndata(2), Frame1.get_dbconndata(3));
        Statement st = con.createStatement();

        ResultSet rs = st.executeQuery(query); 

        String[] skzi=new String[0];
        String s;
        
        while (rs.next()) 
        {
             s = rs.getString("v01");
             skzi=Append(skzi,s);
        }        

        st.close();
        con.close(); 
        con = null;
        FrameLogon.mainpool.Close();

        return skzi;
    }  

    public static String[] Append(String[] stringArray, String newValue)
    {
        String[] tempArray = new String[ stringArray.length + 1 ];
        for (int i=0; i<stringArray.length; i++)
        {
            tempArray[i] = stringArray[i];
        }
        tempArray[stringArray.length] = newValue;
        return tempArray;
    }

    private  String Get_CurrentDate(){
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");  //"yyyy-MM-dd HH:mm:ss");
        Date date = new Date(System.currentTimeMillis());
        String curdate = sdf.format(date);        
        return curdate;
    }

    private boolean  CheckFormFill() {
        boolean check=true;        
        //проверяем все TextFields на форме                
        if (jTextField11.getText().length()<1) {check=false;}
        //if (jTextField12.getText().length()<1) {check=false;}
        //if (jTextField13.getText().length()<1) {check=false;}
        //if (jTextField14.getText().length()<1) {check=false;}
        //if (jTextField15.getText().length()<1) {check=false;}
        //if (jTextField18.getText().length()<1) {check=false;}        
        if (jFormattedTextField1.getText().length()<1) {check=false;}        
        if (jTextField11.getText().length()>1){
            if(Integer.parseInt(jTextField11.getText())<=0){
                {check=false;}    
            }            
        }
        return check;
    }

    private int InsertData(){        
     
        if (!CheckFormFill()){
            JOptionPane.showMessageDialog(this, "Должны быть заполнены все поля.", "Ошибка!", JOptionPane.WARNING_MESSAGE);
            return 1;            
        }  
    
        String DREGDATE=this.jFormattedTextField1.getText();
        String ICLICUSID=this.jTextField11.getText();
        String CNEKTYPE=this.jComboBox1.getSelectedItem().toString();
        String CNEKSN=this.jTextField14.getText();
        String CCNFRMTYPE=this.jComboBox2.getSelectedItem().toString();
        String CCNFRMSN=this.jTextField15.getText();
        String DCLILNK="NULL";
        String IKEYNUM="NULL";
        String CCOMMENT="NULL";
        if (jTextField12.getText().length()<1) {CCOMMENT="NULL";}
        else {CCOMMENT=jTextField12.getText();}        
        String recstate="1";
        //if (jTextField13.getText().length()<1) {CNEKTYPE="NULL";}
        if (jTextField14.getText().length()<1) {CNEKSN="NULL"; CNEKTYPE="NULL";}
        //if (jTextField18.getText().length()<1) {CCNFRMTYPE="NULL";} 
        if (jTextField15.getText().length()<1) {CCNFRMSN="NULL";CCNFRMTYPE="NULL";}
        



        try {
            Insert_SZ(DREGDATE, ICLICUSID, CNEKTYPE, CNEKSN, CCNFRMTYPE, CCNFRMSN, DCLILNK, IKEYNUM, CCOMMENT,  recstate);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        return 0;
    }


    /*Функция для инсерта SQL в базу*/
    public int Insert_SZ(        
        String DREGDATE
        ,String ICLICUSID
        ,String CNEKTYPE
        ,String CNEKSN 
        ,String CCNFRMTYPE
        ,String CCNFRMSN
        ,String DCLILNK
        ,String IKEYNUM
        ,String CCOMMENT
        ,String recstate) throws Exception {

            /*DCLILNK=null;
            IKEYNUM=null;
            CCOMMENT=null;
            recstate="1";*/
            String IRECID;           
            IRECID = "(select max(irecid)+1 from xxi.szflow)";
            DREGDATE = Get_CurrentDate();
            
            if (DCLILNK.compareTo("NULL")!=0) {
                    DCLILNK="to_date('"+DCLILNK+"','DD.MM.RRRR')";
                }                
            if (CCOMMENT.compareTo("NULL")!=0) {
                    CCOMMENT="'"+CCOMMENT+"'";
                } 
            String insert_sql="INSERT INTO xxi.szflow VALUES(" +
                               IRECID +
                              ",TO_DATE('"+DREGDATE+"', 'DD.MM.RRRR')"+
                              ","+ICLICUSID+" "+
                              ",'"+CNEKTYPE+"' "+
                              ",'"+CNEKSN+"' "+
                              ",'"+CCNFRMTYPE+"' "+
                              ",'"+CCNFRMSN+"' "+
                              ","+DCLILNK+" "+
                              ","+IKEYNUM+" "+
                              ","+CCOMMENT+" "+
                              ","+recstate+")";
            
            Connection con = FrameLogon.mainpool.OpenConnection(); //DriverManager.getConnection(Frame1.get_dbconndata(1), Frame1.get_dbconndata(2), Frame1.get_dbconndata(3));
            Statement st = con.createStatement();
            insert_sql=insert_sql.replaceAll("'null'", "null");
            //System.out.println("SQL-SZ:"+insert_sql);
            st.executeUpdate(insert_sql);            
            //con.commit();
            st.close();
            con.close(); 
            con = null;
            FrameLogon.mainpool.Close();
            return 0;
        }
    /*Проверка на наличие дубликата в базе (контроль дубликатов )*/ 
     //type = 1 - нэк, 2 - otp
     public boolean IdAlreadyExist(String id, int type) throws SQLException {        
         String res="";        
         
         String query="select count(*) v01 from xxi.szflow where cneksn like '"+id+"'";         
         if(type==1){ query="select count(*) v01 from xxi.szflow where cneksn like '"+id+"'";}
         else if(type==2){ query="select count(*) v01 from xxi.szflow where ccnfrmsn like '"+id+"'";}
         
         Connection con = FrameLogon.mainpool.OpenConnection(); //DriverManager.getConnection(Frame1.get_dbconndata(1), Frame1.get_dbconndata(2), Frame1.get_dbconndata(3));
         Statement st = con.createStatement();
         ResultSet rs = st.executeQuery(query);
         
         while (rs.next()) 
           {
              res=rs.getString("v01");             
           }
         
         st.close();
         con.close(); 
         con = null;
         FrameLogon.mainpool.Close();     
         
         if (Integer.parseInt(res)>0){
             return true;
         } else {
             return false;
         }
     }

}
