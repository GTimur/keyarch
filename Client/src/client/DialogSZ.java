
package client;

import java.awt.Component;

import java.awt.Dimension;

import java.awt.Frame;

import java.awt.event.ActionEvent;

import java.awt.event.ActionListener;

import java.io.IOException;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import java.util.Date;
import java.util.Vector;

import javax.swing.DefaultListModel;
import javax.swing.JFormattedTextField;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Galutvo
 */
public class DialogSZ extends java.awt.Dialog {    
    private boolean showdeleted=false;
    public static int icusnum=-1;    
    private int recnum=-1;    
    private TableRowSorter<TableModel> sorter;
    /** Creates new form DialogSZ */
    public DialogSZ(Frame parent, String title, boolean modal) {
        super(parent, title, modal);        
        initComponents();
        this.setLocationRelativeTo(parent);
        this.setResizable(false);
        setTitle("Средства защиты переданные клиентам");
        jTable1.setFillsViewportHeight(true);                
        //jTable1.setPreferredSize(new Dimension(300,300));
        jTable1.setPreferredScrollableViewportSize(new Dimension(1000, 1000));
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ClearAndRefillTable();
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event){
                 //System.out.println("event...");
                if(jTable1.getSelectedRow() != -1){  
                 recnum = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(),0).toString());
                 jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()); 
                  jTextField2.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());

                    try {
                        jTextField3.setText(GetNameByNum(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(),2).toString()), false));
                    } catch (SQLException e) {
                    }

                    jTextField4.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4+1).toString()); 
                  jTextField5.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5+1).toString()); 
                  jTextField6.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 6+1).toString()); 
                  jTextField7.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 7+1).toString()); 
                  jTextField8.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 8+1).toString()); 
                  jTextField9.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 9+1).toString()); 
                  jTextField10.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 10+1).toString()); 
                  jTextField11.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString()); 
                  jTextField14.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString()); 
              }
                }});        
        
        System.out.println(jTable1.getRowCount());
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextField11 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField15 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();

        setModal(true);
        setTitle("Средства защиты переданные клиенту");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jScrollPane1.setName("Выданные средства защиты"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Текущая запись таблицы"));
        jPanel1.setToolTipText("");

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextField2.setEditable(false);
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextField4.setEditable(false);
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextField5.setEditable(false);
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextField6.setEditable(false);
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextField7.setEditable(false);
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextField9.setEditable(false);
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextField10.setEditable(false);
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel1.setText("№ П.П.:");

        jLabel2.setText("ВЫДАН:");

        jLabel3.setText("Клиент:");

        jLabel4.setText("ТИП НЭК:");

        jLabel5.setText("НЭК S/N");

        jLabel6.setText("ТИП OTP:");

        jLabel7.setText("OTP S/N");

        jLabel8.setText("ВКЛЮЧЕН:");

        jLabel9.setText("ID ЖУРН.:");

        jLabel11.setText("КОММЕНТАРИЙ:");

        jButton4.setBackground(new java.awt.Color(255, 51, 51));
        jButton4.setText("ОФОРМИТЬ!");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Печать акта п/передачи");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(102, 153, 255));
        jButton6.setText("Новая выдача");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextField11.setEditable(false);
        jTextField11.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel12.setText("ДАТА ВКЛ.:");

        jTextField12.setEditable(false);
        jTextField12.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel13.setText("ВЫСЛАН ДИСТР.:");

        jTextField13.setEditable(false);
        jTextField13.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel14.setText("E-MAIL:");

        jTextField14.setEditable(false);
        jTextField14.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextField8.setEditable(false);
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField6)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel9)
                                .addGap(4, 4, 4)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Выданные средства защиты");

        jButton1.setText("Закрыть");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jCheckBox1.setText("Показать оформленные");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jTextField15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField15.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e) {
                String text = jTextField15.getText().toUpperCase();
                if (text.length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter(text));
                }
            }});

            jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            jLabel15.setText("Фильтр:");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1)))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jButton1))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addGap(4, 4, 4)
                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10)
                            .addGap(133, 133, 133)
                            .addComponent(jCheckBox1)))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel10)
                        .addComponent(jCheckBox1))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton1)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }//GEN-END:initComponents


    /*Проверка на наличие дубликата в базе (контроль дубликатов )*/ 
     //type = 1 - нэк, 2 - otp
     public boolean IdAlreadyExist(String id, int type) throws SQLException {        
         String res="";        
         
         String query="select count(*) v01 from xxi.szflow where cneksn like '"+id+"'";         
         if(type==1){ query="select count(*) v01 from xxi.szflow where cneksn like '"+id+"'";}
         else if(type==2){ query="select count(*) v01 from xxi.szflow where ccnfrmsn like '"+id+"'";}
         
         Connection con = FrameLogon.mainpool.OpenConnection(); //DriverManager.getConnection(Frame1.get_dbconndata(1), Frame1.get_dbconndata(2), Frame1.get_dbconndata(3));
         Statement st = con.createStatement();
         ResultSet rs = st.executeQuery(query);
         
         while (rs.next()) 
           {
              res=rs.getString("v01");             
           }
         
         st.close();
         con.close(); 
         con = null;
         FrameLogon.mainpool.Close();     
         
         if (Integer.parseInt(res)>0){
             return true;
         } else {
             return false;
         }
     }
         



    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

/*УДАЛИТЬ*/

/*ДОБАВИТЬ*/
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (this.jCheckBox1.isSelected()){
            showdeleted=true;
        }else {
                showdeleted=false;
            }        
        ClearAndRefillTable();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DialogSZGive dialogszg = new DialogSZGive(this,"",true);
        dialogszg.setLocationRelativeTo(this);
        dialogszg.setVisible(true);
        ClearAndRefillTable();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        boolean doflag=true;
        if (recnum == -1) {
            JOptionPane.showMessageDialog(this, "Не выбрана запись для печати.", "Предупреждение!", JOptionPane.WARNING_MESSAGE);
            doflag=false;
        }
        if (doflag) {
            int dialogResult = JOptionPane.showConfirmDialog (null, "Сформировать акт приема-передачи оборудования?\n"+jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString(),"Вопрос?",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                String cred=FrameLogon.dbuname+"/"+FrameLogon.dbsword+"@"+FrameLogon.orasid;
                String proc1=FrameLogon.dev6ipath+"\\DEV6I\\BIN\\ifrun60.exe";
                String proc2=FrameLogon.formspath+"\\KERNEL\\ap_main.fmx";
                String proc3="userid="+cred;
                String proc4="REPORT_TYPE_ID=1000001";
                String proc5="report_id=9990000106";
                String proc6="p4=\""+jTable1.getValueAt(jTable1.getSelectedRow(),2).toString()+"\"";
                String proc7="report_generate_type=\"D\"";
                String proc8="report_silent=\"N\"";

                try {
                    Process p= new ProcessBuilder(proc1,proc2,proc3,proc4,proc5,proc6,proc7,proc8).start();
                } catch (IOException f) {
                    f.printStackTrace();
                }
            }
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (recnum<0){
            JOptionPane.showMessageDialog(this, "Не выбрана строка в журнале!", "Предупреждение!", JOptionPane.WARNING_MESSAGE);
        }else{
            if (!showdeleted){
                int dialogResult = JOptionPane.showConfirmDialog (null, "Запись будет помечена как оформленная на клиента?","Внимание!",JOptionPane.YES_NO_OPTION);
                if(dialogResult == JOptionPane.YES_OPTION){
                    int dialogResult2 = JOptionPane.showConfirmDialog (null, "Вы точно уверены, что данные средства оформлены?","Внимание!",JOptionPane.YES_NO_OPTION);
                    if(dialogResult2 == JOptionPane.YES_OPTION){
                        try {
                            DeleteRow(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                            ClearAndRefillTable();
                        } catch (Exception e) {
                        }
                    }
                }
            } else  {  //showdeleted
                JOptionPane.showMessageDialog(this, "Журнал отфильтрован по оформленным!", "Предупреждение!", JOptionPane.WARNING_MESSAGE);
            }
        } //else!

    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogSZ dialog = new DialogSZ(new Frame(),"", true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });*/
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables



    private void ClearAndRefillTable(){
        /*Очистка таблицы*/
        DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel();
        while (model.getRowCount() > 0){
                for (int i = 0; i < model.getRowCount(); ++i){
                    model.removeRow(i);
                }
            };
        /**/
        try {
            this.refilltable(jTable1);            
        } catch (SQLException f) {
        }
        sorter = new TableRowSorter<TableModel>(this.jTable1.getModel());
        jTable1.setRowSorter(sorter);         
        setColumnsWidth(jTable1);        
    }

    public void refilltable(JTable table) throws SQLException {
        String recstate="1"; //показывать только активные записи
        if (showdeleted){
            recstate="2";
        }
        
        try {
        Class.forName("oracle.jdbc.driver.OracleDriver");
        
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }      
                
        Connection con = FrameLogon.mainpool.OpenConnection();  //.gconn; //DriverManager.getConnection(get_dbconndata(1), get_dbconndata(2), get_dbconndata(3));
        
        Statement st = con.createStatement();
              
            ResultSet rs = st.executeQuery("select\n" +             
            "nvl(irecid,0)\n" + 
            ",nvl(to_char(dregdate,'DD.MM.RRRR'),'NULL')\n" + 
            ",nvl(iclicusid,0)\n" + 
            ",UPPER (nvl((select ccusname_sh from cus where icusnum=iclicusid),'НЕТ ДАННЫХ'))\n"+
            ",nvl(substr(get_cus_email(iclicusid),1,64),'НЕ УКАЗАН')\n" +
            ",nvl(cnektype,'NULL')\n" + 
            ",nvl(cneksn,'NULL')\n" + 
            ",nvl(ccnfrmtype,'NULL')\n" + 
            ",nvl(ccnfrmsn,'NULL')\n" + 
            ",nvl(to_char(dclilnk,'DD.MM.RRRR'),'NULL')\n" + 
            ",nvl(ikeynum,'0')\n" + 
            ",nvl(ccomment,'NULL')\n" + 
            ",decode((select ctknid from xxi.key_info where ctknid=cneksn),null,'','*')\n" + 
            ",decode((select ccnfrmid from xxi.key_info where ccnfrmid=ccnfrmsn),null,'','*')\n" +
            "\n" + 
            "from xxi.szflow "+" where recstate="+recstate+" order by irecid");
            
            table.setModel(buildTableModel(rs));
            rs.close();
                       
        st.close();
        con.close(); 
        con = null;
        FrameLogon.mainpool.Close();
    }
    
    public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();
        // names of columns
        String[] ColNames = {
                                "№ П.П."
                                ,"ВЫДАН       "
                                ,"ID В АБС"
                                ,"ИМЯ КЛИЕНТА                      "
                                ,"E-MAIL                   "
                                ,"НЭК ТИП                  "
                                ,"НЭК S/N              "
                                ,"OTP ТИП                  "
                                ,"OTP S/N       "
                                ,"ДАТА ПРИВЯЗКИ"
                                ,"ID ПО ЖУРНАЛУ"
                                ,"КОММЕНТАРИЙ"
                                ,"USB"
                                ,"OTP"
                             };
        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 0; column <= columnCount-1; column++) {
            //columnNames.add(metaData.getColumnName(column));
            columnNames.add(ColNames[column]);
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }
        
        TableModel resmodel = new DefaultTableModel(data, columnNames) {
              public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
              }
            };
        
        return (DefaultTableModel) resmodel;
    }
    
        
    public static void Set_Column_Size(JTable table,int column_number, int size){
        TableColumn column = null;
        column = table.getColumnModel().getColumn(column_number);
        column.setMaxWidth(size);           
        column.setPreferredWidth(size);
        }

    public static void Set_Column_Name(JTable table,int column_number, String column_name){
        TableColumn column = null;
        column = table.getColumnModel().getColumn(column_number);
        column.setHeaderValue(column_name);        
        }


/*Формат таблицы по ширине названия столбца*/
    public void setColumnsWidth(JTable table) {
        table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        JTableHeader th = table.getTableHeader();
        for (int i = 0; i < table.getColumnCount(); i++) {
            TableColumn column = table.getColumnModel().getColumn(i);
            int prefWidth = 
                Math.round(
                    (float) th.getFontMetrics(
                        th.getFont()).getStringBounds(th.getTable().getColumnName(i),
                        th.getGraphics()
                    ).getWidth()
                );
            column.setPreferredWidth(prefWidth + 10);
        }
    }
    
    //Функция для форматирования ширины столбцов таблицы
    public static void Set_Column_Render(JTable table){
        //Нужно указать для объекта table.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
        for (int column = 0; column < table.getColumnCount(); column++)
        {
            TableColumn tableColumn = table.getColumnModel().getColumn(column);
            int preferredWidth = tableColumn.getMinWidth();
            int maxWidth = tableColumn.getMaxWidth();
         
            for (int row = 0; row < table.getRowCount(); row++)
            {
                TableCellRenderer cellRenderer = table.getCellRenderer(row, column);
                Component c = table.prepareRenderer(cellRenderer, row, column);
                int width = c.getPreferredSize().width + table.getIntercellSpacing().width;
                preferredWidth = Math.max(preferredWidth, width);
         
                //  We've exceeded the maximum width, no need to check other rows
         
                if (preferredWidth >= maxWidth)
                {
                    preferredWidth = maxWidth;
                    break;
                }
            }         
            tableColumn.setPreferredWidth( preferredWidth );
        }
    }
    
    
    
    private String GetNameByNum(int num, boolean full) throws SQLException
    {
        String query="select ccusname_sh v01 from xxi.cus where icusnum="+Integer.toString(num);    
        if (full){
            query="select ccusname v01 from xxi.cus where icusnum="+Integer.toString(num);    
        }
                                
        Connection con = FrameLogon.mainpool.OpenConnection(); //DriverManager.getConnection(Frame1.get_dbconndata(1), Frame1.get_dbconndata(2), Frame1.get_dbconndata(3));
        Statement st = con.createStatement();

        ResultSet rs = st.executeQuery(query); 

        String resstr="";
        
        while (rs.next()) 
        {
            resstr = rs.getString("v01");
        }        

        st.close();
        con.close(); 
        con = null;
        FrameLogon.mainpool.Close();
        return resstr;
    }    
    
    private  String Get_CurrentDate(){
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");  //"yyyy-MM-dd HH:mm:ss");
        Date date = new Date(System.currentTimeMillis());
        String curdate = sdf.format(date);        
        return curdate;
    }
    




/*Функция для инсерта SQL в базу*/
    public int Insert_SZ(        
        String DREGDATE
        ,String ICLICUSID
        ,String CNEKTYPE
        ,String CNEKSN 
        ,String CCNFRMTYPE
        ,String CCNFRMSN
        ,String DCLILNK
        ,String IKEYNUM
        ,String CCOMMENT
        ,String recstate) throws Exception {

            /*DCLILNK=null;
            IKEYNUM=null;
            CCOMMENT=null;
            recstate="1";*/
            String IRECID;           
            IRECID = "(select max(irecid)+1 from xxi.szflow)";
            DREGDATE = Get_CurrentDate();
            
            if (DCLILNK.compareTo("NULL")!=0) {
                    DCLILNK="to_date('"+DCLILNK+"','DD.MM.RRRR')";
                }                
            if (CCOMMENT.compareTo("NULL")!=0) {
                    CCOMMENT="'"+CCOMMENT+"'";
                } 
            String insert_sql="INSERT INTO xxi.szflow VALUES(" +
                               IRECID +
                              ",TO_DATE('"+DREGDATE+"', 'DD.MM.RRRR')"+
                              ","+ICLICUSID+" "+
                              ",'"+CNEKTYPE+"' "+
                              ",'"+CNEKSN+"' "+
                              ",'"+CCNFRMTYPE+"' "+
                              ",'"+CCNFRMSN+"' "+
                              ","+DCLILNK+" "+
                              ","+IKEYNUM+" "+
                              ","+CCOMMENT+" "+
                              ","+recstate+")";
            
            Connection con = FrameLogon.mainpool.OpenConnection(); //DriverManager.getConnection(Frame1.get_dbconndata(1), Frame1.get_dbconndata(2), Frame1.get_dbconndata(3));
            Statement st = con.createStatement();
            insert_sql=insert_sql.replaceAll("'null'", "null");
            //System.out.println("SQL-SZ:"+insert_sql);
            st.executeUpdate(insert_sql);            
            //con.commit();
            st.close();
            con.close(); 
            con = null;
            FrameLogon.mainpool.Close();
            return 0;
        }


/*функция для удаления строк таблицы*/
    
        public int DeleteRow(String rowid) throws Exception {
            //jTable1_cli.getValueAt(jTable1_cli.getSelectedRow(), 2).toString()
          
            //String insert_sql="delete from xxi.szflow where irecid="+rowid;
            String rm_sql="update xxi.szflow set recstate=2 where irecid="+rowid;
            
            Connection con = FrameLogon.mainpool.OpenConnection(); //DriverManager.getConnection(Frame1.get_dbconndata(1), Frame1.get_dbconndata(2), Frame1.get_dbconndata(3));
            Statement st = con.createStatement();            
            //System.out.println("DROP-SZ:"+insert_sql);
            st.executeUpdate(rm_sql);            
            //con.commit();
            st.close();
            con.close(); 
            con = null;
            FrameLogon.mainpool.Close();
            return 0;
        }

}
