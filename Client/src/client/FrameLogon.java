
package client;

import java.awt.Dimension;
import java.awt.Toolkit;

import java.io.FileInputStream;

import java.sql.Connection;
import java.sql.DriverManager;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import java.util.Properties;

import javax.sound.sampled.Port;

import javax.swing.JFrame;

import javax.swing.JOptionPane;

import oracle.ucp.UniversalConnectionPoolException;

/**
 *
 * @author Galutvo
 */
public class FrameLogon extends javax.swing.JFrame {
    //private static String conn_string="jdbc:oracle:thin:@10.20.20.14:1521:test";
    public static String orasid="";
    private String orahome="";
    public static Connection gconn = null;
    public static Statement gstmt = null;
    public static DbPool mainpool;
    public static String dbuname="";
    public static String dbsword="";
    public static String formspath="";
    public static String dev6ipath="";


    /** Creates new form FrameLogon */
    public FrameLogon() {        
        initComponents();
        LoadINI();
        this.jPasswordField1.requestFocus();
        this.setTitle(keyarch.VERSION_BANNER);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Журнал учета СКЗИ - АО ЮМК БАНК (С) 2015");
        setBackground(java.awt.SystemColor.inactiveCaption);
        setResizable(false);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jPasswordField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Имя пользователя");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Пароль");

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("БД (oracle sid)");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setText("Вход");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("LABEL4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(jTextField2))))
                .addGap(125, 125, 125))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents


    private int CheckDBConnection() {
        
        String count="0";
        Connection con;
        try {
            con = FrameLogon.mainpool.OpenConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select count(sysdate) v01 from dual");
            while (rs.next()) 
            {
                count = rs.getString("v01");             
            }
            rs.close();
            st.close();
            con.close(); 
            con = null;
            FrameLogon.mainpool.Close(); 
        } catch (SQLException e) {
            //System.out.print("ERR"+e.toString());
            JOptionPane.showMessageDialog(this,"<html><body><p style='width: 200px;'>"+e.toString()+"</p></body></html>", "ОШИБКА!", JOptionPane.ERROR_MESSAGE);                        
            return 1;
        } 
             
        if (Integer.parseInt(count)==1){
            return 0;
        }else {                       
            return 1;
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if (this.jTextField2.getText().length()>0 && new String(this.jPasswordField1.getPassword()).length()>0 && this.jTextField1.getText().length()>0){
            System.setProperty("oracle.net.tns_admin", orahome+"/NETWORK/ADMIN");
            try {
                Class.forName("oracle.jdbc.OracleDriver");
            } catch (ClassNotFoundException e) {
            }
            String dbURL = "jdbc:oracle:thin:@"+this.jTextField2.getText();
            orasid=this.jTextField2.getText();
            dbsword=new String(this.jPasswordField1.getPassword()).toUpperCase();
            dbuname=this.jTextField1.getText();
            try {
                //System.out.println(dbURL+this.jTextField1.getText()+new String(this.jPasswordField1.getPassword()));
                mainpool = new DbPool(dbURL, this.jTextField1.getText(), new String(this.jPasswordField1.getPassword()).toUpperCase());
            } catch (UniversalConnectionPoolException e) {
                e.printStackTrace();                
            } catch (SQLException e) {
                e.printStackTrace();                
            }
                        
            int check=CheckDBConnection(); //Проверим соединение с СУБД            
            if (check==0){                
                this.setVisible(false);
                JFrame frame = new Frame1();
                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                Dimension frameSize = frame.getSize();
                if (frameSize.height > screenSize.height) {
                    frameSize.height = screenSize.height;
                }
                if (frameSize.width > screenSize.width) {
                    frameSize.width = screenSize.width;
                }
                frame.setLocation( ( screenSize.width - frameSize.width ) / 2, ( screenSize.height - frameSize.height ) / 2 );
                frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
                frame.setVisible(true);            
                try {
                    mainpool.Close();
                } catch (SQLException e) {
                }
                this.dispose();   
            }
            else{
                try {
                    //System.out.println("DESTROY");
                    mainpool.Destroy();  //Закрываем UCP                  
                } catch (SQLException e) {
                }
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Все поля должны быть корректно заполнены", "Предупреждение!", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
        this.jButton1ActionPerformed(evt);
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameLogon.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                               ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameLogon.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                               ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameLogon.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                               ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameLogon.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                               ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameLogon().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    public void LoadINI() {
       try{
         Properties p = new Properties();
         p.load(new FileInputStream(System.getProperty("user.home")+"\\keyarch.ini"));
         //System.out.println("user = " + p.getProperty("DBuser"));
         //System.out.println("password = " + p.getProperty("DBpassword"));
         //System.out.println("ORACLE SID = " + p.getProperty("ORASID"));
         //System.out.println("ORACLE HOME = " + p.getProperty("ORAHOME"));
         this.jTextField1.setText(p.getProperty("DBuser"));
         this.jTextField2.setText(p.getProperty("ORASID"));         
         orahome = p.getProperty("ORAHOME");
         this.jLabel4.setText(orahome+"/NETWORK/ADMIN");
         formspath=p.getProperty("FORMSPATH");
         dev6ipath=p.getProperty("DEV6IPATH");
         
                     
         p.list(System.out);
         }
       catch (Exception e) {
         System.out.println(e);
         //this.dispose();
         System.exit(1);
         }
       }
   
}
